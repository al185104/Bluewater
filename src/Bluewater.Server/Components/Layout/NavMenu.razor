@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@rendermode InteractiveServer
@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager NavigationManager

<CascadingAuthenticationState>
    <div class="navmenu">
        <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
        <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size24.Navigation())" Color="Color.Fill" /></label>
        <nav class="sitenav" aria-labelledby="main-menu">
            <FluentNavMenu Id="main-menu" Collapsible="true" Width="200" Title="Navigation menu" @bind-Expanded="expanded" CustomToggle="true">
                <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size24.Home())" IconColor="Color.Accent">Dashboard</FluentNavLink>
                <AuthorizeView Roles="SuperAdmin">
                    <Authorized>
                        <FluentNavLink Href="employee" Icon="@(new Icons.Regular.Size24.ChartPerson())" IconColor="Color.Accent">Employees</FluentNavLink>
                        <FluentNavLink Href="shift" Icon="@(new Icons.Regular.Size24.CalendarEdit())" IconColor="Color.Accent">Shifts</FluentNavLink>
                        <FluentNavLink Href="schedule" Icon="@(new Icons.Regular.Size24.CalendarArrowRepeatAll())" IconColor="Color.Accent">Schedules</FluentNavLink>
                        <FluentNavLink Href="timesheet" Icon="@(new Icons.Regular.Size24.Timer())" IconColor="Color.Accent">Timesheet</FluentNavLink>
                        <FluentNavLink Href="attendance" Icon="@(new Icons.Regular.Size24.CalendarLtr())" IconColor="Color.Accent">Attendance</FluentNavLink>
                        <FluentNavLink Href="payroll" Icon="@(new Icons.Regular.Size24.Money())" IconColor="Color.Accent">Payroll</FluentNavLink>
                        <FluentNavLink Href="report" Icon="@(new Icons.Regular.Size24.DocumentPrint())" IconColor="Color.Accent">Reports</FluentNavLink>
                        <FluentNavLink Href="meals" Icon="@(new Icons.Regular.Size24.SpatulaSpoon())" IconColor="Color.Accent">Meals</FluentNavLink>
                        <FluentNavLink Href="setting" Icon="@(new Icons.Regular.Size24.SettingsCogMultiple())" IconColor="Color.Accent">Settings</FluentNavLink>
                        <FluentNavLink Href="identity/account/register" Icon="@(new Icons.Regular.Size24.New())" IconColor="Color.Accent">Register</FluentNavLink>
                    </Authorized>
                </AuthorizeView>
                <FluentNavGroup Title="Forms" Tooltip="Form submissions" Icon="@(new Icons.Regular.Size24.Folder())" >
                    <FluentNavLink Href="overtime" Icon="@(new Icons.Regular.Size24.CalendarStar())" Tooltip="Overtime form submissions">Overtime</FluentNavLink>
                    <FluentNavLink Href="undertime" Icon="@(new Icons.Regular.Size24.Timer3())" Tooltip="Undertime form submissions">Undertime</FluentNavLink>
                    <FluentNavLink Href="failureinout" Icon="@(new Icons.Regular.Size24.TimerOff())" Tooltip="Failure to time in/out submissions">Failure in/out</FluentNavLink>
                    <FluentNavLink Href="deduction" Icon="@(new Icons.Regular.Size24.MoneyOff())" Tooltip="Deduction form submissions">Deduction</FluentNavLink>
                    <FluentNavLink Href="otherearning" Icon="@(new Icons.Regular.Size24.Wallet())" Tooltip="Other earning form submissions">Other earning</FluentNavLink>
                    <FluentNavLink Href="leave" Icon="@(new Icons.Regular.Size24.BookContacts())" Tooltip="Leaves form submissions">Leaves</FluentNavLink>
                </FluentNavGroup>            
                <FluentNavLink Href="/Identity/Account/Logout" Icon="@(new Icons.Regular.Size20.SignOut())" IconColor="Color.Accent">Logout</FluentNavLink>
            </FluentNavMenu>
        </nav>
    </div>
</CascadingAuthenticationState>

@code {
    private bool expanded = true;

    private async Task LogoutAsync() {
        await SignInManager.SignOutAsync();
        NavigationManager.NavigateTo("/login");
    }
}
