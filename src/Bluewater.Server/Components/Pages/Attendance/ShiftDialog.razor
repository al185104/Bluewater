@using Bluewater.UseCases.Shifts;
@using Bluewater.Server.Global;
@using Bluewater.UseCases.Schedules;
@inject IGlobalService GlobalService;

@implements IDialogContentComponent<ShiftDTO>

<FluentDialogBody OnAfterRenderAsync="@InitializeDialogAsync()">
    <FluentListbox TOption="ShiftDTO"
        Items="@shifts"
        OptionText="@(o => $"{o.Name}   :   [{o.ShiftStartTime!.Value.ToString("h:mm:ss tt")} - {o.ShiftBreakTime!.Value.ToString("h:mm:ss tt")}]    [{o.ShiftBreakEndTime!.Value.ToString("h:mm:ss tt")} - {o.ShiftEndTime!.Value.ToString("h:mm:ss tt")}]    ({o.BreakHours} break hrs)")"
        @bind-SelectedOption="@Content">
    </FluentListbox>
</FluentDialogBody>

<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>




@code {
    [Parameter]
    public ShiftDTO Content { get; set; } = default!;
    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;    
    private bool isFirstLoad = false;
    private List<ShiftDTO> shifts = new();

    private void OnShiftSelected(ShiftDTO selectedShift)
    {
        Content = selectedShift;
    }

    private Task InitializeDialogAsync()
    {
        if (!isFirstLoad)
        {
            isFirstLoad = true;
            shifts = GlobalService.Shifts.ToList() ?? new List<ShiftDTO>();
        }
        return Task.CompletedTask;
    }

    private async Task SaveAsync()
    {
        await Dialog.CloseAsync(Content);
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }    
}
