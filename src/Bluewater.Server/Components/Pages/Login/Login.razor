@page "/login"
@rendermode InteractiveServer
@attribute [AllowAnonymous]
@using Bluewater.Server.Global
@using Microsoft.AspNetCore.Authorization
@inject CustomAuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation

<FluentTextField Style="width: 100%" Label="Last Name" @bind-Value="@username" required />
<FluentTextField Style="width: 100%" Label="Last Name" @bind-Value="@password" required />
<FluentButton Appearance="Appearance.Accent" OnClick="@(async() => await HandleLoginAsync())">Click me</FluentButton>

@code {
    private string? username;
    private string? password;

    private async Task HandleLoginAsync()
    {
        if(string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password)) return;

        @* bool loginSuccessful = await AuthProvider.LoginAsync(username, password);

        if (loginSuccessful) {
            Navigation.NavigateTo("/");
        } *@
        await AuthProvider.LoginAsync(username, password);
        Navigation.NavigateTo("/");

    }
}