@page "/meallist"
@rendermode @(new InteractiveServerRenderMode(prerender:false))

@using Bluewater.UseCases.MealCredits
@using Bluewater.UseCases.MealCredits.List
@using MediatR
@inject IServiceScopeFactory ServiceScopeFactory
@inject IMediator Mediator

<h3>MealList</h3>

@foreach(var meal in Meals)
{
    // display meal info here
    <p>@meal.EmployeeId - @meal.Date</p>
}


@if (isBusy == true)
{
    <div class="overlay">
        <div class="progress-ring-container">
            <div class="progress-ring"></div>
        </div>
    </div>
}

@code {
    private bool isBusy = false;
    public IQueryable<MealCreditDTO> Meals { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            isBusy = true;
            await Task.Delay(100);
            using (var scope = ServiceScopeFactory.CreateScope())
            {
                var mediator = scope.ServiceProvider.GetRequiredService<IMediator>();

                var _now = DateTime.Now;
                var _dateOnly = DateOnly.FromDateTime(_now);
                var result = await mediator.Send(new ListMealCreditQuery(null, null));

                if (result != null)
                    Meals = result.Value.AsQueryable();
            }


            await base.OnInitializedAsync();
        }
        finally
        {
            isBusy = false;
        }
    }
}

<style>
    .progress-ring-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
    }

    .progress-ring {
        width: 48px;
        height: 48px;
        border: 5px solid rgba(0, 0, 0, 0.1);
        border-top: 5px solid #3498db;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.7);
        z-index: 1000;
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>